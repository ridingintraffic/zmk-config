/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define OTH     3

#define TAPPING_TERM 200
#define QUICK_TAP    150

&lt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};

&mt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};
/ {

    behaviors {
        hm: layer_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <QUICK_TAP>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <QUICK_TAP>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        tdg: tap_dance_g {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_G";
            #binding-cells = <0>;
            tapping-term-ms = <QUICK_TAP>;
            bindings = <&kp G>, <&caps_word>;
        };
        tdh: tap_dance_h {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_M";
            #binding-cells = <0>;
            tapping-term-ms = <QUICK_TAP>;
            bindings = <&kp H>, <&caps_word>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
&gresc   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp MINUS
&kp TAB   &lt 3 A  &lt 2 S  &lt 1 D    &hs LSHIFT F  &tdg                &tdh  &hs LSHIFT J    &lt 1 K     &lt 2 L   &lt 3 SEMI &kp SINGLE_QUOTE
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B                     &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp BSLH
                &kp LSHFT &kp LGUI  &kp BACKSPACE             &mt LC(LS(LALT)) SPACE &lt 3 ENTER &kp RSHFT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4   &kp N5                                            &kp N6     &kp N7    &kp N8    &kp N9           &kp N0   &kp EQUAL
&kp GRAVE &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3                  &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT        &trans   &kp TILDE
&trans &ext_power EP_ON &ext_power EP_OFF &kp LG(LS(LC(N3))) &kp LG(LS(LC(N4))) &kp LBKT  &kp RBKT   &kp MINUS &kp EQUAL &kp SINGLE_QUOTE &kp BSLH &kp PIPE
                                        &kp LCTL  &kp LALT &kp DELETE                     &mt SPACE LC(LS(LALT))   &kp LC(LEFT)    &kp LC(RIGHT)
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&kp TILDE  &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PRCNT  &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR &trans
&kp TILDE &trans  &trans  &trans  &trans  &kp LBRC         &kp RBRC    &trans   &trans          &trans    &trans   &trans
&trans  &trans  &trans  &trans  &trans  &kp LBRC         &kp RBRC &kp MINUS &kp EQUAL   &kp LBKT   &kp RBKT  &kp BSLH
                &kp LCTL  &kp LALT    &trans           &trans    &trans      &trans
                        >;
                };
        };
        oth_layer {
            bindings = <
    &trans  &gresc  &kp GRAVE &kp TILDE &kp DOLLAR &kp PRCNT  &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR &trans
    &trans  &kp TAB  &trans  &trans  &trans  &trans         &trans    &trans   &trans          &trans    &trans   &trans
    &trans  &trans  &trans  &trans  &trans  &bootloader     &bootloader    &trans   &trans          &trans    &trans   &trans
            &trans    &kp LGUI  &trans        &trans &trans &trans
                >;
        };
};
