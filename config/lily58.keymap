/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#define TAPPING_TERM 200
#define QUICK_TAP    150

&caps_word {
    continue-list = <UNDERSCORE>;

};

&lt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};

&mt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};
/ {

    behaviors {
        hm: layer_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        tdg: tap_dance_g {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_G";
            #binding-cells = <0>;
            tapping-term-ms = <QUICK_TAP>;
            bindings = <&kp G>, <&caps_word>;
        };
        tdh: tap_dance_h {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_H";
            #binding-cells = <0>;
            tapping-term-ms = <QUICK_TAP>;
            bindings = <&kp H>, <&caps_word>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮                         ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
    &gresc      &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                               &kp N6     &kp N7     &kp N8     &kp N9     &kp N0    &kp MINUS
//├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤                         ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
    &kp TAB     &kp Q      &kp W      &kp E      &kp R      &kp T                                &kp Y      &kp U      &kp I      &kp O      &kp P     &kp EQUAL
//├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤                         ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
    &kp TAB     &lt 3 A   &lt 2 S    &lt 1 D    &hs LSHIFT F  &tdg                               &tdh    &hs LSHIFT J  &lt 1 K   &lt 2 L   &lt 3 SEMI  &kp SINGLE_QUOTE
//├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤──────────╮   ╭──────────┤──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
    &kp LSHFT   &kp Z      &kp X      &kp C      &kp V      &kp B    &kp LBKT       &kp RBKT     &kp N      &kp M   &kp COMMA    &kp DOT   &kp FSLH   &kp BSLH
//╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤──────────╯   ╰──┤──────────────────┼─────────────────┼───────────────┼─────────┼──────────╯
                      &lt 2 LALT &kp LSHIFT &kp LGUI  &kp BACKSPACE                   &mt LC(LS(LALT)) SPACE &kp ENTER  &kp RSHFT  &lt 1 C_VOL_DN
//                      ╰──────────┴───────────┴─────────┴──────────╯                 ╰──────────────────┴─────────────────┴───────────────┴───────────────╯
			>;

		};
		lower_layer {
		bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮                             ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
  &trans      &trans      &trans     &trans      &trans   &trans                                    &trans      &trans    &trans     &trans     &trans   &trans
//├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤                             ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
    &trans     &gresc      &trans     &trans     &trans     &trans                                  &trans     &trans     &trans      &trans    &trans    &trans
//├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤                             ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
    &trans     &GRAVE      &trans     &trans    &trans      &trans                                   &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT &kp SINGLE_QUOTE &kp TILDE
//├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤──────────╮       ╭──────────┤──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
  &trans   &TILDE    &trans &kp LG(LS(LC(N3))) &kp LG(LS(LC(N4))) &trans  &trans      &trans    &kp MINUS &kp KP_PLUS  &kp LBRC  &kp RBRC &kp BSLH  &kp PIPE
//╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤──────────╯       ╰──┤──────────────────┼─────────────────┼───────────────┼─────────┼──────────╯
                       &kp LALT  &kp LCTL  &kp LALT  &kp DELETE                            &kp TAB   &kp MINUS   &kp UNDER  &kp LC(UP)
//                ╰──────────┴───────────┴─────────┴─────────────╯                        ╰──────────────────┴─────────────────┴───────────────┴───────────────╯

			>;

		};
		raise_layer {
		bindings = <
&kp TILDE &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PRCNT                                    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR &trans
&kp TILDE &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                               &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &kp EQUAL
&kp TILDE &kp F2 &kp F3 &kp F4  &kp F5  &kp LBRC                                           &kp RBRC   &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp LBRC   &trans                        &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
                        &trans  &kp LCTL  &kp LALT    &trans                               &trans    &kp LC(LEFT)    &kp LC(RIGHT) &kp LC(UP)
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
			util_layer {
            bindings = <
&trans  &trans &trans trans trans &trans                                         &out OUT_USB    &out OUT_BLE    &trans    &trans   &trans    &trans
&trans &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PRCNT                             &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR     &trans
&kp GRAVE &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3         &kp LEFT     &kp DOWN  &kp UP    &kp RIGHT  &trans   &kp TILDE
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &bootloader   &trans              &trans &bootloader &kp MINUS &kp EQUAL &kp EQUAL &kp RBKT  &kp BSLH
                        &trans  &trans  &trans    &trans                          &trans    &trans      &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
