#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWE 0
#define NAV     1
#define SYM     2
#define OTH     3

#define TAPPING_TERM 200
#define QUICK_TAP    100

// Desktop and tab navigation shortcuts
#define MEH    LC(LS(LALT))
#define HYP    LG(LC(LS(LALT)))

// Key position groups
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29


&mt {
    flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};

&lt {
    flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};


/ {
    behaviors {
        hm: layer_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <QUICK_TAP>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <QUICK_TAP>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

   keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮               ╭──────────┬──────────┬──────────┬──────────┬──────────╮
    &kp Q       &kp W       &kp E     &kp R      &kp T                      &kp Y      &kp U       &kp I       &kp O    &kp P
//├──────────┼──────────┼──────────┼──────────┼──────────┤               ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &lt 3 A     &lt 2 S   &lt 1 D  &hs LSHIFT F   &kp G                &mt LG(LALT) H  &hs RSHFT J   &lt 1 K   &lt 2 L   &lt 3 SEMI
//├──────────┼──────────┼──────────┼──────────┼──────────┤               ├──────────┼──────────┼──────────┼──────────┼──────────┤
     &kp Z       &kp X     &kp C      &kp V      &kp B                      &kp N      &kp M    &kp COMMA    &kp DOT   &kp FSLH
//╰──────────┴──────────┴──────────┼──────────┼──────────╯               ╰─────────┼───────────┼──────────┼──────────┼──────────╯
                         &kp LSHFT   &kp LGUI &mt LC(LS(LALT)) BSPC   &mt LC(LS(LALT)) SPACE &lt 3 ENTER     &kp RSHIFT
//                     ╰───────────┴───────────┴─────────────╯       ╰───────────────────┴───────────────┴───────────────╯
            >;
        };

        nav_layer {
            label = "Navigation";

            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮               ╭──────────┬──────────┬──────────┬──────────┬──────────╮
 &gresc         &none      &none        &none      &none                     &none      &none       &none      &none         &none  
//├──────────┼──────────┼──────────┼──────────┼──────────┤               ├──────────┼──────────┼──────────┼──────────┼──────────┤
 &kp GRAVE     &none  &none  &none  &none                 &kp LEFT  &kp DOWN      &kp UP        &kp RIGHT        &kp SQT
//├──────────┼──────────┼──────────┼──────────┼──────────┤               ├──────────┼──────────┼──────────┼──────────┼──────────┤
 &kp TILDE  &none &kp LG(LS(LC(N3))) &kp LG(LS(LC(N4))) &kp LBKT         &kp RBKT &kp MINUS &kp KP_PLUS     &kp LBRC  &kp RBRC
//╰──────────┴──────────┴──────────┼──────────┼──────────╯               ╰─────────┼───────────┼──────────┼──────────┼──────────╯
              &kp LCTL  &kp LALT  &kp DELETE                                        &kp TAB    &kp MINUS   &kp UNDER 
//                     ╰───────────┴───────────┴─────────────╯       ╰───────────────────┴───────────────┴───────────────╯
               >;
        };

        sym_layer {
            label = "Symbols";

            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮               ╭──────────┬──────────┬──────────┬──────────┬──────────╮
     &kp N1     &kp N2     &kp N3     &kp N4     &kp N5       &kp N6     &kp N7     &kp N8     &kp N9     &kp N0 
//├──────────┼──────────┼──────────┼──────────┼──────────┤               ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &trans   &trans &trans   &trans     &trans         &trans    &trans    &trans          &trans    &kp DOUBLE_QUOTES
//├──────────┼──────────┼──────────┼──────────┼──────────┤               ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &trans   &trans &trans   &trans     &trans         &trans    &trans    &trans          &trans    &trans
//╰──────────┴──────────┴──────────┼──────────┼──────────╯               ╰─────────┼───────────┼──────────┼──────────┼──────────╯
            &trans        &trans       &trans          &trans &trans &trans
//                     ╰───────────┴───────────┴─────────────╯       ╰───────────────────┴───────────────┴───────────────╯
                >;
        };
        oth_layer {
            label = "Other";

            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮               ╭──────────┬──────────┬──────────┬──────────┬──────────╮
     &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PRCNT    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR
//├──────────┼──────────┼──────────┼──────────┼──────────┤               ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &bt BT_CLR    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3   &trans &trans &trans &trans &trans
//├──────────┼──────────┼──────────┼──────────┼──────────┤               ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &out OUT_USB  &out OUT_BLE    &trans  &trans &bootloader  &bootloader &trans  &trans &trans &trans
//╰──────────┴──────────┴──────────┼──────────┼──────────╯               ╰─────────┼───────────┼──────────┼──────────┼──────────╯
            &trans    &kp LGUI  &trans        &trans &trans &trans
//                     ╰───────────┴───────────┴─────────────╯       ╰───────────────────┴───────────────┴───────────────╯
                >;
        };
    };
};
